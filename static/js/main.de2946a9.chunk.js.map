{"version":3,"sources":["components/GeneralInfo.js","components/WorkExperienceEntry.js","components/WorkExperience.js","components/EducationEntry.js","components/Education.js","App.js","index.js"],"names":["generalInfo","props","isEditing","className","onSubmit","submit","name","for","type","onChange","nameChange","value","required","emailChange","email","phoneChange","phone","id","onClick","edit","workExperienceEntry","index","changeInput","entryInfo","data-work-experience-form","e","role","company","startDate","endDate","description","class","WorkExperience","addButtonHandler","setState","workExperienceEntries","state","concat","onChangeInput","workExperienceEntryIndex","inputType","newValue","target","updatedWorkExperienceEntries","submitButtonHandler","editingWorkExperience","bind","this","map","entry","Component","educationEntry","title","school","Education","educationEntries","educationEntryIndex","updatedEducationEntries","editingEducation","App","generalInfoNameChangeHandler","event","generalInfoName","generalInfoEmailChangeHandler","generalInfoEmail","generalInfoPhoneNumberChangeHandler","generalInfoPhoneNumber","generalInfoSubmitHandler","editingGeneralInfo","generalInfoEditButtonHandler","GeneralInfo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de2946a9.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst generalInfo = (props) => {\n    if (props.isEditing) {\n        return(\n            <div className=\"generalInfo\">\n                <form \n                    onSubmit={props.submit} \n                    name=\"general-info\"\n                >\n                \n                    <h2>General Info</h2>\n\n                    <div>\n                    <label for=\"name\">\n                        <strong>Name:</strong>\n                    </label>\n                    <input type=\"text\" name=\"name\" onChange={props.nameChange} value={props.name} required />\n                    </div>\n\n                    <div>\n                    <label for=\"email\">\n                        <strong>Email:</strong>\n                    </label>\n                    <input type=\"text\" name=\"email\" onChange={props.emailChange} value={props.email} />\n                    </div>\n\n                    <div>\n                    <label for=\"phone\">\n                        <strong>Phone Number:</strong>\n                    </label>\n                    <input type=\"text\" name=\"phone\" onChange={props.phoneChange} value={props.phone}/>\n                    </div>\n\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    } else {\n        return(\n            <div>\n                <h1>{props.name}</h1>\n                <p>{props.email}</p>\n                <p>{props.phone}</p>\n                <button id=\"edit-general-info-button\" onClick={props.edit}>Edit</button>\n            </div>\n        )\n    }\n}\n\nexport default generalInfo","import React from 'react';\nimport './WorkExperienceEntry.css'\n\nconst workExperienceEntry = (props) => {\n\n    const { index, changeInput, entryInfo, isEditing } = props;\n\n    return (\n        <div>\n        { isEditing ? (\n            <form className = 'workExperienceForm' data-work-experience-form={index}>\n                <span>\n                <label for=\"role\">Role:</label>\n                <input type=\"text\" name=\"role\" onChange={(e) => changeInput(e, index, 'role')} value={entryInfo.role} />\n                </span>\n                \n                <span>\n                <label for=\"company\">Company:</label>\n                <input type=\"text\" name=\"company\" onChange={(e) => changeInput(e, index, 'company')} value={entryInfo.company}/>\n                </span>\n                \n                <span>\n                <label for=\"start-date\">Start Date:</label>\n                <input type=\"text\" name=\"start-date\" onChange={(e) => changeInput(e, index, 'start-date')} value={entryInfo.startDate}/> {/* Make this one of those date selectors when you learn how to use those */}\n                \n                <label for=\"end-date\">End Date:</label>\n                <input type=\"text\" name=\"end-date\" onChange={(e) => changeInput(e, index, 'end-date')} value={entryInfo.endDate}/> {/* Make this one of those date selectors when you learn how to use those */}\n                </span>\n                \n                <span>\n                <label for=\"description\">Responsibilities / Accomplishments:</label>\n                <textarea name=\"description\" onChange={(e) => changeInput(e, index, 'description')} value={entryInfo.description}/>\n                </span>\n            </form>\n        ) : (\n            <div className = 'workExperienceEntry'>\n                <span class='role'>{entryInfo.role}</span>, {entryInfo.company} <span class='work-dates'>{entryInfo.startDate}-{entryInfo.endDate}</span>\n                <div className = 'work-experience-description'>\n                    {entryInfo.description}\n                </div>\n            </div>\n        )}\n        </div>\n    )\n}\n\nexport default workExperienceEntry","import React, { Component } from 'react';\nimport WorkExperienceEntry from './WorkExperienceEntry'\nimport './WorkExperience.css'\n\nclass WorkExperience extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            workExperienceEntries: [],\n            editingWorkExperience: true,\n        }\n\n        this.onChangeInput = this.onChangeInput.bind(this);\n    }\n\n    addButtonHandler = () => {\n        this.setState({\n            workExperienceEntries: this.state.workExperienceEntries.concat({\n                role: '',\n                company: '',\n                startDate: '',\n                endDate: '',\n                description: '',\n            })\n        });\n    }\n\n    onChangeInput = (e, workExperienceEntryIndex, inputType) => {\n        const newValue = e.target.value;\n        const updatedWorkExperienceEntries = [...this.state.workExperienceEntries];\n        switch(inputType) {\n            case 'role':\n                updatedWorkExperienceEntries[workExperienceEntryIndex].role = newValue;\n                break;\n            case 'company':\n                updatedWorkExperienceEntries[workExperienceEntryIndex].company = newValue;\n                break;\n            case 'start-date':\n                updatedWorkExperienceEntries[workExperienceEntryIndex].startDate = newValue;\n                break;\n            case 'end-date':\n                updatedWorkExperienceEntries[workExperienceEntryIndex].endDate = newValue;\n                break;\n            case 'description':\n                updatedWorkExperienceEntries[workExperienceEntryIndex].description = newValue;\n        }\n        this.setState({\n            workExperienceEntries: updatedWorkExperienceEntries,\n        })\n    }\n\n    submitButtonHandler = () => {\n        this.setState({\n            editingWorkExperience: false,\n        });\n    }\n    \n\n    render() {\n        const { workExperienceEntries, editingWorkExperience } = this.state;\n\n        return(\n            <div className=\"workExperience\">\n                <h2>Work Experience</h2>\n                {workExperienceEntries.map((entry, index) => {\n                    return (\n                    <WorkExperienceEntry \n                        isEditing={editingWorkExperience} \n                        index={index} \n                        changeInput={this.onChangeInput} \n                        entryInfo={entry}/>\n                    )\n                })}\n                {editingWorkExperience ? (<button onClick={this.addButtonHandler}>Add</button>) : null}\n                <button onClick={this.submitButtonHandler}>Submit</button>\n            </div>\n        )\n    }\n}\n\nexport default WorkExperience","import React from 'react';\nimport './EducationEntry.css';\n\nconst educationEntry = (props) => {\n    const { isEditing, index, changeInput, entryInfo} = props;\n\n    return (\n        <div>\n        { isEditing ? (\n            <div className=\"educationEntry\">\n                <span>\n                <label for=\"title\">Title of Study:</label>\n                <input type=\"text\" name=\"title\" onChange={(e) => changeInput(e, index, 'title')} value={entryInfo.title}/>\n                </span>\n\n                <span>\n                <label for=\"school\">School:</label>\n                <input type=\"text\" name=\"school\" onChange={(e) => changeInput(e, index, 'school')} value={entryInfo.school} />\n                </span>\n\n                <span>\n                <label for=\"start-date\">Start Date:</label>\n                <input type=\"text\" name=\"start-date\" onChange={(e) => changeInput(e, index, 'start-date')} value={entryInfo.startDate} /> {/* Make this one of those date selectors when you learn how to use those */}\n                </span>\n\n                <span>\n                <label for=\"end-date\">End Date:</label>\n                <input type=\"text\" name=\"end-date\" onChange={(e) => changeInput(e, index, 'end-date')} value={entryInfo.endDate} /> {/* Make this one of those date selectors when you learn how to use those */}\n                </span>\n            </div>\n        ) : (\n            <div className='educationEntry'>\n                <span className='title'>{entryInfo.title}</span>\n                <span className='school-and-dates'>{entryInfo.school} ({entryInfo.startDate}-{entryInfo.endDate})</span>\n            </div>\n            )}\n        </div>\n    )\n}\n\nexport default educationEntry","import React, { Component } from 'react';\nimport EducationEntry from './EducationEntry';\nimport './Education.css'\n\nclass Education extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            educationEntries: [],\n            editingEducation: true,\n        };\n\n        this.onChangeInput = this.onChangeInput.bind(this);\n    }\n\n    addButtonHandler = () => {\n        this.setState({\n            educationEntries: this.state.educationEntries.concat({\n                title: '',\n                school: '',\n                startDate: '',\n                endDate: '',\n            })\n        });\n    }\n\n    onChangeInput = (e, educationEntryIndex, inputType) => {\n        const newValue = e.target.value;\n        const updatedEducationEntries = [...this.state.educationEntries];\n        switch(inputType) {\n            case 'title':\n                updatedEducationEntries[educationEntryIndex].title = e.target.value;\n                break;\n            case 'school':\n                updatedEducationEntries[educationEntryIndex].school = e.target.value;\n                break;\n            case 'start-date':\n                updatedEducationEntries[educationEntryIndex].startDate = e.target.value;\n                break;\n            case 'end-date':\n                updatedEducationEntries[educationEntryIndex].endDate = e.target.value;\n        }\n        this.setState({\n            educationEntries: updatedEducationEntries,\n        });\n    }\n\n    submitButtonHandler = () => {\n        this.setState({\n            editingEducation: false,\n        });\n    }\n\n    render() {\n        const { educationEntries, editingEducation } = this.state;\n\n        return(\n            <div className=\"education\">\n                <h2>Education</h2>\n                {educationEntries.map((entry, index) => {\n                    return (\n                        <EducationEntry\n                            isEditing={editingEducation}\n                            index={index}\n                            changeInput={this.onChangeInput}\n                            entryInfo={entry}\n                        />\n                    )\n                })}\n                { editingEducation ? (<button onClick={this.addButtonHandler}>Add</button>) : null }\n                <button onClick={this.submitButtonHandler}>Submit</button>\n            </div>\n        )\n    }\n}\n\nexport default Education","import React, { Component } from 'react';\nimport './App.css';\nimport GeneralInfo from './components/GeneralInfo'\nimport WorkExperience from './components/WorkExperience'\nimport Education from './components/Education'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingGeneralInfo: true,\n      generalInfoName: \"\",\n      generalInfoEmail: \"\",\n      generalInfoPhoneNumber: \"\",\n    }\n\n    this.generalInfoNameChangeHandler = this.generalInfoNameChangeHandler.bind(this);\n    this.generalInfoEmailChangeHandler = this.generalInfoEmailChangeHandler.bind(this);\n    this.generalInfoPhoneNumberChangeHandler = this.generalInfoPhoneNumberChangeHandler.bind(this);\n    this.generalInfoSubmitHandler = this.generalInfoSubmitHandler.bind(this);\n    this.generalInfoEditButtonHandler = this.generalInfoEditButtonHandler.bind(this);\n  }\n\n  generalInfoNameChangeHandler = (event) => {\n    this.setState({\n      generalInfoName: event.target.value\n    });\n  }\n\n  generalInfoEmailChangeHandler = (event) => {\n    this.setState({\n      generalInfoEmail: event.target.value\n    });\n  }\n\n  generalInfoPhoneNumberChangeHandler = (event) => {\n    this.setState({\n      generalInfoPhoneNumber: event.target.value\n    })\n  }\n\n  generalInfoSubmitHandler = () => {\n    this.setState({\n      editingGeneralInfo: false,\n    })\n  }\n\n  generalInfoEditButtonHandler = () => {\n    this.setState({\n      editingGeneralInfo: true\n    });\n  }\n\n  render() {\n    const { editingGeneralInfo, generalInfoName, generalInfoEmail, generalInfoPhoneNumber } = this.state;\n\n    return (\n      <div className=\"App\">\n        <GeneralInfo \n          submit={this.generalInfoSubmitHandler} \n          edit={this.generalInfoEditButtonHandler}\n          isEditing={editingGeneralInfo} \n          name={generalInfoName}\n          email={generalInfoEmail}\n          phone={generalInfoPhoneNumber}\n          nameChange={this.generalInfoNameChangeHandler}\n          phoneChange={this.generalInfoPhoneNumberChangeHandler}\n          emailChange={this.generalInfoEmailChangeHandler}\n        />\n        <WorkExperience />\n        <Education />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}